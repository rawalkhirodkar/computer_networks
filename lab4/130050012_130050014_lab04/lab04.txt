Lab 04
Exercise 1:
-----------------------------------------------------------------------------------------------------------------------------------------------------------
1. Command:set lan [$ns make-lan -trace on $nodelist $opt(bw) $opt(delay) $opt(ll) $opt(ifq) $opt(mac) $opt(chan)]

The above command is used to set up LAN with bus topology for the simulator.

There are seven arguments:
	a] nodelist: Group of nodes.
	b] bw: The bandwidth of lan. 
	c] delay: The delay in lan.
	d] ll: Link layer type.
	e] ifq: Interfacing queue, e.g "Queue/DropTail" used in this case.
	f] mac: The MAC type
	h] chan: Channel type
 
 MAC protocol was specified "set opt(mac)	Mac/802_3" in the start of the .tcl file. 
 "mac" is a variable which is being assigned as "Mac/802_3" using "opt" functionality of ns2.
 
-----------------------------------------------------------------------------------------------------------------------------------------------------------
2. Data rate of LAN is 1Mbps.
The variable "bw" evaluates to the lan bandwidth of the simulation, which is assigned as 1Mb at the start of the .tcl script.

-----------------------------------------------------------------------------------------------------------------------------------------------------------
3. Each node is generating LAN traffic at 100 kilo bits per sec.
This can be determined from "set rate 100Kb" and "$cbr_($i) set rate_ $rate" command in "create-traffic" procedure in the .tcl script.

----------------------------------------------------------------------------------------------------------------------------------------------------------
4. Packet size is 1000 bytes in the traffic generated.
This can be determined from "set packetSize_ 1000" command in "create-traffic" procedure in the .tcl script.

Inter packet gap: 0 sec. (Time of generation of packets at the generation layer)
This can be illustrated from following observation from the trace file.
+ 0.5 1 5 cbr 1000 ------- 0 1.0 0.0 0 0
+ 0.58 1 5 cbr 1000 ------- 0 1.0 0.0 1 4
+ 0.66 1 5 cbr 1000 ------- 0 1.0 0.0 2 8

After every 0.08 secs, node 1 enqueues a packet. But 0.08 sec is the transmission time for the nodes (1000*8 bits/100 kbps). Therefore it can be concluded that
packets are being generated back to back in the application layer.

-------------------------------------------------------------------------------------------------------------------------------------------------------------
5. The duration for which traffic is active is (10.5 - 0.5 = 10)sec long.
The traffic starts at 0.5 secs, this can be determined from "$ns at 0.5 "$cbr_($i) start" command in "create-traffic" procedure in the .tcl script.

And traffic halts at 10.5 secs, this can be determined from "$ns at $opt(fin) "$cbr_($i) stop" command in "create-traffic" procedure in the .tcl script,
as "fin" variable is assigned as 10.5 at the start of the file.

---------------------------------------------------------------------------------------------------------------------------------------------------------------
6. Node 0 is the destination of the traffic.
Command "$ns attach-agent $node(0) $null_($i)" indicates that the null agent of every node is attached to node 0 => every packet goes to node 0 is the sink.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Step 3:

1. 500 packets are successfully received by the reciever.

2. No, they are no packet drops. As the number of nodes is less, and the data-rate(100 kbps) at which the traffic is being generated by each node is small as compared to the 
LAN's link speed (1Mbps). The maximum rate at which traffic can be generated is (number of nodes * data rate = 4*100kbps) 400kbps in this case.

This is significantly less than the LAN's bandwidth.Therefore there is no network congestion as buffers are speedliy emptied faster than the rate at which they are filled,
Hence no packets are dropped as we don't observe buffer overflow.

3. System Throughput = (500 * 1000 * 8)bits/10secs = 400kbps
   LAN data-rate = 1 Mbps
   
   System Efficiency in percentage = (0.4 Mbps/ 1Mps)*100 = 40%
   
4. System Efficiency is not 100% as there is not maximal utilization of the LAN link.
   The link is idle for a considerable amount of time due to less traffic data-rate than that of LAN's data-rate. Hence the under usage.
   
5. Individual Throughputs = (Packets successfully received at sink sent by the node) * 8 * 1000bits / 10sec
   Packets successfully received at sink by each node is 125.
   grep "^r" csmacd.tr|grep -c "1000 ------- 0 4."
   
   Therefore Individual Throughput for all node is 100kbps.
   
   Thus System Throughput = Sum of all individual throughputs.
   
6.  The time at which Sequence number 0 packets were generated is 0.5secs for all nodes.
	The time at which Sequence number 0 packets were transmitted is 0.5secs for all nodes.
	
	Yes, they collide.
	
	Relevant snippet from the trace file:-
	
	r 0.508248 5 0 cbr 1000 ------- 0 2.0 0.1 0 1
	r 0.517748 5 0 cbr 1000 ------- 0 4.0 0.3 0 3
	r 0.526604 5 0 cbr 1000 ------- 0 3.0 0.2 0 2
	r 0.534816 5 0 cbr 1000 ------- 0 1.0 0.0 0 0	

	Observing the second column, we can infer that :
	Time of receival of packet 0 for node 1 = 0.534816
	Time of receival of packet 0 for node 2 = 0.508248
	Time of receival of packet 0 for node 3 = 0.526604
	Time of receival of packet 0 for node 4 = 0.517748
	
	Collision Ranking ( "who won?"):
	2 > 4 > 3 > 1

#################################################################################################################################################################

Exercise 2:

As the number of nodes increase the throughput increases.
There is low drop % at low number of nodes.

Increase in number of nodes => more fight for resources between the nodes, as a result more number of drops. 
The buffers overflow, as the rate at which they are emptied is less than the rate at which they are filled.

Throughput increases, as the system remains less idle, and more use of LAN link is done as a result.
The buffers are constantly at there limit, and the packets are constantly begin transmitted as a result.

4.	When nodes are 8, the maximum traffic rate (Number of nodes*individual data rate = offered load) is 800 kbps which is less than 1 Mbps.
	But the offered load shoots to 1.2 Mbps with 12 nodes in the simulation.
	
	Observation:
	8 nodes: 
		Drop % = 0 , as 800kbps < 1Mbps
		System efficiency = 77% , as under-utilization of resources
		System Throughput = 770 kbps
	
	12 nodes: 
		Drop % = 4 , as 1200kbps > 1Mbps
		System efficiency = 89% , as under-utilization of resources
		System Throughput = 890 kbps
	
	
	Increasing the offered load, increases the drop % and increases the throughput and hence the system efficiency
	
5.	Upper limit on number of nodes as per us is 14.
	As we can achieve decent efficiency (91%) with low drop percentage (5%) at this configuration.

#################################################################################################################################################################

Exercise 3:	
	
Node 9 has the maximum Throughput.
Node 17 has the minimum Throughput. (Farther from the sink as compared to Node 9)

Every Node doesn't gets to send data at the same rate. Hence this is not a "perfectly" fair system.
The greater the distance from the sink, more is the probability of collision. Hence the throughput decreases as we go farther from the Destination Node.
	
Collision of packets occurs due to two reasons:
1. If huge number of packets are in vicinty of your packet.
2. If the packet needs to travel long distance to reach the destination.

For the nodes nearer to Destination nodes, there is heavy packet density in the link, as every other source's packets are in the vicinity. Thus due to reason 1, such nodes
collide more and have low throughput.

For the nodes farther from Destination nodes, there is high probabilty of collision with other packets as more packets are discovered on the way. Thus due to reason 2, such nodes
collide more and have low throughput.

Node 9 is in the middle of the topology, and hence we can argue that it should have Maximum Throughput. 	
	
Jain's Index is a measure of fairness of the system : 0.84

The number is fairly close to 1, hence the system is quite fair.
	
#################################################################################################################################################################

Exercise 4:

Graph: Enq to Deq:

This graph gives us insight in the Additive increase and Multiplicative Decrease method implemented in the ethernet.

1.	Initially the time in buffer is zero for all the packets, this indicates that the network is not suffering from congestion. And this is the additive increase phase, where
	number of packets are sent by the Source to the Destination, the increase in the number is linear.
	
2.	At around packet number 900 we see our first spike in the graph.

	We can hence conclude that the system started suffering from network congestion. And all the sources entered the multiplicative decrease phase.
	As a result a packet spends more time in the buffer.
	
	Again after the collision phase, all source execute the additve phase, increasing the rate of sending packets in the network. This explains the decrease in time spent in
	the buffer.
	

Graph:	Deq to Recv:

1.	Initially the network is generating traffic at its full capacity. Due to this, a packet suffers from collisions, as a result it is retransmitted again and again.
	The network congestion avoidance mechanisms(AIMD) are not yet up and running. Due to large number of collisions it takes significant time to reach the destination.
	We can say that, packet number 50 (approx) collided most of the time than other packets.

2.	In the latter part, as the congestion avoidance begins, as a result the collisions are less.Hence no need of retransmission.Hence the time to reach is approx zero for
	higher sequence numbers.
	
	
	
	

